/*
                //  Brute Force Solution
                //  Time Complexity O(n log n)
                
class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> ans;

        for (int i=0; i<=n; i++) {
            int num = i, countOneBit = 0;
            while (num) {
                int rem = num % 2;
                countOneBit += rem;
                num /= 2;
            }
            ans.push_back(countOneBit);
        }

        return ans;
    }
};

*/


                //  Optimized Solution
                //  Time Complexity: O(n)

class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> ans(n+1, 0);

        for (int i=0; i<=n; i++) {
            if (i%2 == 0)
                ans[i] = ans[i/2];
            else 
                ans[i] = ans[i/2]+1;
        }

        return ans;
    }
};
